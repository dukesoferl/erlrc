=Version 1.0.6=
  * Fix an erlrc-hooks bug.
        
=Version 1.0.5=
  * release for Centos7

=Version 1.0.4=
  * updated .gitignore

=Version 1.0.3=
  * nodes directory was vanishing with newer framewerk so 'fixing'

=Version 1.0.2=
  * add a provides in case building with different versions of erlang.

=Version 1.0.1=
  * change permissions of /etc/erlrc.d/nodes directory as we probably don't
  run as root and otherwise this causes errors.

=Version 1.0.0=
  * switch from regexp to re, R13 will no longer work
  * removing patching, since R14B onward doesn't need it

=Version 0.2.6=
  * release_handler_1 was being installed in priv and ebin, the ebin directory
  means it was clashing.  Also when the patch fails to apply package wasn't
  building.

=Version 0.2.5=
  * rpm release

=Version 0.2.4=
  * eunit provided with erlang now

=Version 0.2.3=
  * already_started error is ok for application start return value

=Version 0.2.2=
  * infinity timeout for advanced upgrade directives
  * objfile_extension/0 lives in code

=Version 0.2.1= 
  * add trailing '.' to output of erlrc-makeappup script 

=Version 0.2.0= 
  * simpler error when load fails for erlrc_lib:load_application 
  * disable overrides for now, causing dialyzer freakouts
  * standalone erlrc-makeappup script

=Version 0.1.2=
  * erlrcdynamic tests verify that correct module version was called
  * erlrcdynamic:unload now calls application:unload
  * erlrcdynamic functions now attempt to preserve the code path and
    set of loaded modules when an error occurs

=Version 0.1.1=
  * recognize buggy r12 release_handler as well
  	these files are exactly the same between r11b5 and r12b5 so
	happily the same patch works for both

=Version 0.1.0=
  * app override files are now merged with primary app file
  * app overrides have syntax to control merging with app file

=Version 0.0.17=
  * bug fix: was not loading .app files for included applications that
    were not mentioned in /etc/erlrc.d

=Version 0.0.16=
  * bug fix: was not starting dependencies of any included applications
    before starting the containing application

=Version 0.0.15=
  * erlrc_boot:boot ensures that the erlrc application is started,
    which ensures that the release_handler_1 bugfix is installed

=Version 0.0.14=
  * google code release

=Version 0.0.13=
  * use existing appup file if present

=Version 0.0.12=
  * make empty supervisor.

=Version 0.0.11=
  * don't stay started.

=Version 0.0.10=
  * release_handler bugfix
  (http://www.erlang.org/pipermail/erlang-questions/2008-March/033950.html)

=Version 0.0.9= 
  * handle behavior as well as behaviour
  * fix 'started_included_stopped' case_clause bug

=Version 0.0.8=
  * Make sure newest code is loaded when upgrading an app that is not started.

=Version 0.0.7=
  * Avoid chicken and egg issue by not allowing overrides of erlrc's
    application spec.

=Version 0.0.6=
  * Was not correctly handling case when erlrc was already loaded.
  * Log an error if boot fails.

=Version 0.0.5=
  * Make sure the erlrc application is loaded in erlrc_boot:boot, to
    support starting erlrc not via the boot script.

=Version 0.0.4=
  * Allow ERLRC_ROOT environment variable to override root_dir.

=Version 0.0.3=
  * Fix for upgrade/downgrade of included application.

=Version 0.0.2=
  * Provide interface to start extra applications in the boot script before
    the erlrc boot process. (E.g., for installing an alternate error logger.)

=Version 0.0.1=
  * Have erlrcdynamic respect override files.
  * code:ensure_loaded/1 all application modules during start.
  * Don't write appup file to filesystem
  * Maintain the applications/ => running invariant in erlrcdynamic

=Version 0.0.0=
  * Initial version.
